variables:
  GIT_DEPTH: 0

stages:
  - init
  - gen
  - test
  - build
  - finish

.base:
  before_script:
    - cat schutzbot/team_ssh_keys.txt | tee -a ~/.ssh/authorized_keys > /dev/null
    - schutzbot/deploy.sh
    - schutzbot/ci_details.sh > ci-details-before-run
  after_script:
    - schutzbot/ci_details.sh > ci-details-after-run || true
    - schutzbot/unregister.sh || true
    - schutzbot/update_github_status.sh update || true
  interruptible: true
  tags:
    - terraform
  artifacts:
    paths:
      - ci-artifacts
      - ci-details-before-run
      - ci-details-after-run
      - "*.repo"
    when: always

.terraform:
  extends: .base
  tags:
    - terraform


init:
  stage: init
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh start
  interruptible: true

Regression:
  stage: test
  extends: .terraform
  script:
    - schutzbot/selinux-context.sh
    - sudo test/cases/manifest_tests ${PARALLEL_EXEC}
  rules:
    - if: '$CI_PIPELINE_SOURCE != "trigger"'
  artifacts:
    when: always
    paths:
      - generated-image-infos/
  parallel:
    matrix:
      - PARALLEL_EXEC: ["1/4", "2/4", "3/4", "4/4"]
        RUNNER:
          - aws/fedora-39-x86_64
          - aws/fedora-39-aarch64
          - aws/centos-stream-9-x86_64
          - aws/centos-stream-9-aarch64
          - aws/centos-stream-10-x86_64
          - aws/centos-stream-10-aarch64
      - PARALLEL_EXEC: ["1/4", "2/4", "3/4", "4/4"]
        RUNNER:
          - aws/rhel-8.10-ga-x86_64
          - aws/rhel-8.10-ga-aarch64
          - aws/rhel-9.4-ga-x86_64
          - aws/rhel-9.4-ga-aarch64
          - aws/rhel-9.5-nightly-x86_64
          - aws/rhel-9.5-nightly-aarch64
          - aws/rhel-10.0-nightly-x86_64
          - aws/rhel-10.0-nightly-aarch64
        INTERNAL_NETWORK: "true"

Manifest-gen:
  stage: gen
  extends: .terraform
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
  artifacts:
    when: always
    paths:
      - manifests
  script:
    - schutzbot/gen_manifests.sh
  parallel:
    matrix:
      - RUNNER:
          - aws/fedora-39-x86_64
        INTERNAL_NETWORK: "true"

Image-info-build:
  stage: build
  extends: .terraform
  script:
    - schutzbot/selinux-context.sh
    # yamllint disable-line rule:line-length
    - tools/import-image-tests manifests manifest-db --manifest-only --db-ignore=db-ignore --filter-with-ci-distros=.gitlab-ci.yml --verbose
    - sudo test/cases/gen_db ${PARALLEL_EXEC}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
  artifacts:
    when: always
    paths:
      - generated-image-infos/
  dependencies:
    - Manifest-gen
  parallel:
    matrix:
      - PARALLEL_EXEC: ["1/4", "2/4", "3/4", "4/4"]
        RUNNER:
          - aws/fedora-39-x86_64
          - aws/fedora-39-aarch64
          - aws/centos-stream-9-x86_64
          - aws/centos-stream-9-aarch64
          - aws/centos-stream-10-x86_64
          - aws/centos-stream-10-aarch64
      - PARALLEL_EXEC: ["1/4", "2/4", "3/4", "4/4"]
        RUNNER:
          - aws/rhel-8.10-ga-x86_64
          - aws/rhel-8.10-ga-aarch64
          - aws/rhel-9.4-ga-x86_64
          - aws/rhel-9.4-ga-aarch64
          - aws/rhel-9.5-nightly-x86_64
          - aws/rhel-9.5-nightly-aarch64
          - aws/rhel-10.0-nightly-x86_64
          - aws/rhel-10.0-nightly-aarch64
        INTERNAL_NETWORK: "true"

push-image-info:
  stage: finish
  extends: .terraform
  script:
    # yamllint disable-line rule:line-length
    - tools/import-image-tests manifests manifest-db --manifest-only --db-ignore=db-ignore --filter-with-ci-distros=.gitlab-ci.yml --verbose
    - rm -r manifests
    - schutzbot/include_image_info.sh
  dependencies:
    - Manifest-gen
  rules:
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
  parallel:
    matrix:
      - RUNNER:
          - aws/fedora-39-x86_64

finish:
  stage: finish
  rules:
    - if: '$CI_PIPELINE_SOURCE != "trigger"'
  dependencies: []
  tags:
    - shell
  script:
    - schutzbot/update_github_status.sh finish
